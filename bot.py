from aiogram.types import KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from secret import TOKEN
import sqlite3
from machine import *

bot = Bot(token=TOKEN)  # –¢—É—Ç –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
storage = MemoryStorage()  # –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(commands='start')
async def cmd_start(message: types.Message):
    with sqlite3.connect('ManMade.db', timeout=60) as connect:
        cursor = connect.cursor()
        cursor.execute("SELECT uid FROM local WHERE uid = ?", (message.from_user.id,))
        start = cursor.fetchall()
        start_inf = list(sum(start, ()))
        connect.commit()
        if start_inf == []:
            with sqlite3.connect('ManMade.db', timeout=60) as connect:
                cursor = connect.cursor()
                cursor.execute("INSERT INTO local (uid) VALUES (?)",
                               (message.from_user.id,))
                await message.answer(
                    f'ü§ñ {message.chat.first_name}, –î–æ–±—Ä—ã–π –¥–µ–Ω—å, —ç—Ç–æ –±–æ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ MAN-MADE. ü§ñ\n')
                button_phone = types.KeyboardButton(text="Share", request_contact=True)
                keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                keyboard.add(button_phone)
                await message.answer(text='–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                                     reply_markup=keyboard)

                @dp.message_handler(content_types=["contact"])
                async def phone(message: types.Message):
                    if message.contact is not None:
                        phone_number = message.contact.phone_number
                        with sqlite3.connect('ManMade.db', timeout=60) as connect:
                            cursor = connect.cursor()
                            cursor.execute("UPDATE local set phone = ? WHERE uid = ?",(message.contact.phone_number, message.from_user.id,))
                            cursor.execute("SELECT phone FROM customers WHERE phone = ?", (phone_number,))

                            check_phone = cursor.fetchall()
                            phone_inf = list(sum(check_phone, ()))
                            connect.commit()
                            if phone_inf == []:
                                await message.answer(
                                    "–ö –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É 8-800-707-52-62")
                            else:
                                keyboard_main = InlineKeyboardMarkup(resize_keyboard=True, row_width=3).add(
                                    InlineKeyboardButton(text='Upgrade', callback_data="upg"),
                                    InlineKeyboardButton(text='–û–±—Å–ª—É–∂–∏—Ç—å –º–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä', callback_data="pc"),
                                    InlineKeyboardButton(text='–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞', callback_data="conf"),
                                    InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É', callback_data="teh"))
                                await message.answer(
                                    f"{message.chat.first_name}, —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä—è–¥ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥: UPGRADE –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ. –ê —Ç–∞–∫–∂–µ –ø–æ—Å–º–æ—Ä–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É –≤–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∞–∫—Ü–∏–∏ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—Å.",
                                    reply_markup=keyboard_main)

        else:
            keyboard_main = InlineKeyboardMarkup(resize_keyboard=True, row_width=3).add(
                InlineKeyboardButton(text='Upgrade', callback_data="upg"),
                InlineKeyboardButton(text='–û–±—Å–ª—É–∂–∏—Ç—å –º–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä', callback_data="pc"),
                InlineKeyboardButton(text='–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞', callback_data="conf"),
                InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É', callback_data="teh"))
            await message.answer(
                f"{message.chat.first_name}, —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä—è–¥ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥: UPGRADE –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ. –ê —Ç–∞–∫–∂–µ –ø–æ—Å–º–æ—Ä–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É –≤–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∞–∫—Ü–∏–∏ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—Å.",
                reply_markup=keyboard_main)

@dp.callback_query_handler(text="teh")
async def teh(callback: types.CallbackQuery):
    await callback.message.answer("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É\nhttps://t.me/MAPC_TbI_XOPOLLI")

@dp.callback_query_handler(text="upg")
async def upg(callback: types.CallbackQuery):
    await callback.message.answer()

@dp.callback_query_handler(text="pc")
async def pc(callback: types.CallbackQuery):
    await callback.message.answer()

@dp.callback_query_handler(text="conf")
async def conf(callback: types.CallbackQuery):
    with sqlite3.connect('ManMade.db', timeout=60) as connect:
        cursor = connect.cursor()
        cursor.execute("SELECT * FROM PC WHERE uid = ?",)
        await callback.message.answer()
